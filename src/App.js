import { useEffect, useRef, useState } from 'react';
import './App.css';
import firebase from 'firebase/app';
import "firebase/firestore";
import 'firebase/auth';
// —Ö—É–∫–∏ –∏–∑ node-–ø–∞–∫–µ—Ç–∞ firebase
import { useAuthState } from 'react-firebase-hooks/auth';
import { useCollectionData } from 'react-firebase-hooks/firestore'


// –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ firebase
firebase.initializeApp({
  apiKey: "AIzaSyDK9_6P6zRI48GTVnewOzSjAb1863-C8Uc",
  authDomain: "chat-nuchp.firebaseapp.com",
  projectId: "chat-nuchp",
  storageBucket: "chat-nuchp.appspot.com",
  messagingSenderId: "951656438052",
  appId: "1:951656438052:web:6f91681c6441688e1cbbb1"
  // –≤—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥–∏ –∏–∑ firebase
})

firebase.auth().useDeviceLanguage();
const auth = firebase.auth();
const firestore = firebase.firestore();

function App() {
  //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  const [user] = useAuthState(auth);

  return (
    <div className="App">
      <header >
        <h1>Web Chat</h1>
        <SignOut />
      </header>

      <section>
        {/* —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å */}
        {user ? <ChatRoom /> : <SignIn />}
      </section>

    </div>
  );
}

function SignIn() {
  const [phone, setPhone] = useState("");

 const signInWithPhone = () => {
   //–î–µ–ª–∞–µ–º –∫–∞–ø—Ç—á—É –Ω–µ–≤–∏–¥–∏–º–æ–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞(!). –ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É. –¢–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ—Ç–æ–¥–∞ —Å–º—Å-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ firebase
  const captcha = new firebase.auth.RecaptchaVerifier("recaptcha-container", {
    size: "invisible",
  });
  //–°–∞–º –º–µ—Ç–æ–¥ —Å–º—Å-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ö–æ–¥ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –æ—Ç—Å—é–¥–∞ https://firebase.google.com/docs/auth/web/phone-auth
  auth.signInWithPhoneNumber(phone, captcha)
    .then((e) => {
      const code = prompt("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –°–ú–°", "");
      if (code === null) return;
//—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∏–∑ —Å–º—Å
      e.confirm(code)
        .then((result) => {
          console.log(result.user);

          document.querySelector("label").textContent += result.user.phone + "–ù–æ–º–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω";
        })
        .catch((error) => {
          console.error(error);
        });
    })
    .catch((error) => {
      console.error(error);
    });
 }
  
  const signInWithGoogle = () => {
    const provider = new firebase.auth.GoogleAuthProvider();
    //–ú–µ—Ç–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –≥—É–≥–ª –∞–∫–∫–∞—É–Ω—Ç–∞
    auth.signInWithPopup(provider);
  }
  return (
    <>
      <div className="google-box">
      <div className="google-btn" onClick={signInWithGoogle}>
          <div className="google-icon-wrapper" >
            <img className="google-icon" src="https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg" alt="logo"/>
          </div>
        <div className="btn-text"><b>–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google</b></div>
      </div>
      <br />
      <div className="container">
        <div id="recaptcha-container" />
      </div>
      </div>
      <div className="flex-box">
      <input
        className="phone-holder"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        type="phone"
        value={phone}
        onChange={(e) => {
          setPhone(e.target.value);
        }}
      />
      <button id="phone" type="button" onClick={signInWithPhone}>
        –í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –°–ú–°-–∫–æ–¥–∞
      </button>
      <label></label>
      </div>
    </>
    
  )

}
//–§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ —Å–µ—Ä–≤–∏—Å–∞ auth - signOut. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã–π —é–∑–µ—Ä
const SignOut = () => {
  return (
    auth.currentUser && (
      <button type="button" onClick={() => auth.signOut()}>
        –í—ã—Ö–æ–¥
      </button>
    )
  );
};

function ChatRoom() {

  //–°—Ç–µ–π—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
  const [formValue, setFormValue] = useState("");

  const dummy = useRef();//–ø—Ä–∏–≤—è–∑–∫–∞ –∫ –ø—É—Å—Ç–æ–º—É —Å–ø–∞–Ω—É, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π

  const messagesRef = firestore.collection("messages"); //–ü–æ–¥–≤—è–∑—ã–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'messages' –≤ –ë–î firestore
  const query = messagesRef.orderBy("createdAt").limitToLast(25); 

  const [messages] = useCollectionData(query, { idField: "id" }); //–•—É–∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'messages'. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

  //–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–±–º–∏—Ç–∞. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤ —Ñ–æ—Ä–º–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
  const sendMessage = async (e) => {
    e.preventDefault();
    const { uid, photoURL } = auth.currentUser;

    //–ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è
    //–ï—Å–ª–∏ —á–µ—Ä–µ–∑ –≥—É–≥–ª-–∞–∫–∫–∞—É–Ω—Ç, —Ç–æ –∞–≤–∞—Ç–∞—Ä–∫–∞ –±–µ—Ä–µ—Ç—Å—è –∏–∑ –Ω–µ–≥–æ, –µ—Å–ª–∏ —á–µ—Ä–µ–∑ —Å–º—Å - —Ç–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
    const avatarPhoto = photoURL ? photoURL : "https://bit.ly/348yGrm"

    //–º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –ë–î
    await messagesRef.add({
      text: formValue,
      createdAt: firebase.firestore.FieldValue.serverTimestamp(),//–î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º-—Å—Ç–∞–º–ø –∫ –∫–∞–∂–¥–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∫–∞–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–π–¥–∏—à–Ω–∏–∫
      uid,
      avatarPhoto,
    });

    setFormValue("");//–æ—á–∏—â–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  };

  //—Ö—É–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —á–∞—Ç–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.
  useEffect(() => {
    dummy.current.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  return (<>
    <div className="text-field">
      {messages &&
        messages.map((message) => (
          <ChatMessage key={message.id} message={message} />
        ))}
      </div>
      <div className="send-form">
      <span ref={dummy} />
      <form onSubmit={sendMessage}>
        <input
          value={formValue}
          onChange={(e) => setFormValue(e.target.value)}
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å"
        />
        <button type="submit" disabled={!formValue}>
        üì§
        </button>
      </form>
      </div>
    

  </>)
}



const ChatMessage = ({ message }) => {
  const { text, uid, avatarPhoto } = message;
//—É—Å–ª–æ–≤–Ω—ã–π –≤—ã–±–æ—Ä –Ω–∞–∑–≤–∞–Ω–∏—è css-–∫–ª–∞—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ß–∏—Å—Ç–æ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.
  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';
//—Ä–µ–Ω–¥–µ—Ä —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø—Ä–æ–ø—Å–æ–≤. 
  return (<>
    <div className={`message ${messageClass}`}>
      <img src={avatarPhoto} alt="avatar"/>
      <p>{text}</p>
    </div>
  </>)
}

export default App;
